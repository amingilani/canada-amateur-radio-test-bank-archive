name: Download and Archive File

on:
  workflow_call:
    inputs:
      remote_endpoint:
        description: "The remote file URL to download"
        required: true
        type: string
      file_path:
        description: "The name to use for the subdirectory"
        required: true
        type: string
      file_extension:
        description: "The extension for the downloaded file"
        required: true
        type: string
      should_extract:
        description: "Whether to extract the downloaded zip file"
        required: false
        type: boolean

jobs:
  download_and_archive_file:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Set file name and path variables
        run: |
          current_date=$(date --iso-8601)

          # In GitHub actions tr keeps reading forever, and so us dd to limit
          # the input to 512 bytes. The LC_ALL=C is to ensure that the output
          # is ASCII only.
          randomized_suffix=$(dd bs=512 if=/dev/urandom count=1 2>/dev/null | LC_ALL=C tr -dc "a-z0-9" | head -c 5)

          # The archived files that will be downloaded

          archive_file_basename=${current_date}_${randomized_suffix}
          echo "archive_file_basename=$archive_file_basename" >> $GITHUB_ENV

          archive_file_name="${archive_file_basename}${{ inputs.file_extension }}"
          echo "archive_file_name=$archive_file_name" >> $GITHUB_ENV

          archive_file_directory="${{ inputs.file_path }}/${archive_file_basename}"
          echo "archive_file_directory=$archive_file_directory" >> $GITHUB_ENV

          archive_file_path="${archive_file_directory}/${archive_file_name}"
          echo "archive_file_path=$archive_file_path" >> $GITHUB_ENV


          # The latest file is always stored with the same name

          latest_file_basename="latest"
          echo "latest_file_basename=$latest_file_basename" >> $GITHUB_ENV

          latest_file_name="${latest_file_basename}${{ inputs.file_extension }}"
          echo "latest_file_name=$latest_file_name" >> $GITHUB_ENV

          latest_file_directory="${{ inputs.file_path }}/${latest_file_basename}"
          echo "latest_file_directory=$latest_file_directory" >> $GITHUB_ENV

          latest_file_path="${latest_file_directory}/${latest_file_name}"
          echo "latest_file_path=$latest_file_path" >> $GITHUB_ENV

      - name: Download remote file into subdirectory
        run: |
          user_agent="GilanisTestBankArchiver/1.0 (+https://github.com/amingilani/canada-amateur-radio-test-bank-archive)"
          echo "Downloading from ${{ inputs.remote_endpoint }} to ${archive_file_path} with User-Agent: ${user_agent}"
          mkdir -p "${archive_file_directory}"
          wget --user-agent="${user_agent}" \
              --output-document="${archive_file_path}" \
              ${{ inputs.remote_endpoint }} || { echo "Download failed!"; exit 1; }

      - name: Generate and store BSD-style SHA-512 checksum
        run: |
          archive_checksums_file_path="${archive_file_path}.checksums"

          md5sum "${archive_file_path}" >> "${archive_checksums_file_path}"
          sha1sum "${archive_file_path}" >> "${archive_checksums_file_path}"
          sha256sum "${archive_file_path}" >> "${archive_checksums_file_path}"
          sha512sum "${archive_file_path}" >> "${archive_checksums_file_path}"
          b2sum "${archive_file_path}" >> "${archive_checksums_file_path}"

      - name: Update the latest files
        run: |
          mkdir -p "${latest_file_directory}"

          archive_checksums_file_path="${archive_file_path}.checksums"
          latest_checksums_file_path="${latest_file_path}.checksums"

          cp "${archive_file_path}" "${latest_file_path}"
          cp "${archive_checksums_file_path}" "${latest_checksums_file_path}"

      - name: Extract zip file
        if: ${{ inputs.should_extract == true }}
        run: |
          archive_file_extraction_directory="${archive_file_directory}/${archive_file_basename}"
          latest_file_extraction_directory="${latest_file_directory}/${latest_file_basename}"


          # Ensure destination directories exist
          mkdir -p "${archive_file_extraction_directory}"
          mkdir -p "${latest_file_extraction_directory}"

          unzip "${archive_file_path}" -d "${archive_file_extraction_directory}"
          unzip "${latest_file_path}" -d "${latest_file_extraction_directory}"

      - name: Set commit message
        id: set_commit_message
        run: |
          commit_message="Archiving latest ${archive_file_path}"
          echo "commit_message=$commit_message" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: ${{ steps.set_commit_message.outputs.commit_message }}
          branch: main
          commit_user_name: Archival Job
          commit_user_email: 2662370B.github.action@gilani.me
          file_pattern: "**/latest.zip **/latest.zip.checksums"
